h1. Overview

We think it makes the most sense to approach teaching Scala not as if
it's an improved Java but as a new language. Experience in Java is not
expected. Focus will be around the interpreter and the
object-functional style as well as the style of programming we do
here. An emphasis will be placed on maintainability, clarity of
expression, and leveraging the type system.


h3. Table of Contents

# values, functions, classes, methods, inheritance, try-catch-finally. expression-oriented programming
# case classes, objects, packages, apply, update, Functions are Objects (uniform access principle), pattern matching
# Lists, Maps, functional combinators: map, foreach, filter, zip, folds
# More functions! PartialFunctions, more Pattern Matching
# Basic Types, type inference, variance, bounds, quantification
# Advanced Types, view bounds, higher-kinded types, recursive types, structural types
# All about SBT
# Tour of the Scala Collections library
# Write tests with Specs, a BDD testing framework for Scala
# Concurrent in Scala
# Java/Scala interoperability
